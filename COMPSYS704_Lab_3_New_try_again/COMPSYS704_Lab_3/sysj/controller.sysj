Controller(
		input signal pusherRetracted,pusherExtended,WPgripped,armAtSource,armAtDest,empty,request;
		output signal pusherExtend,vacOn,armSource,armDest;
		input Integer signal mode;
		input signal pusherExtendM,vacOnM,armSourceM,armDestM;
		)
->{
/* TODO: Write control-logic */
	
	signal automatic;
	signal manual;
	
	{
		loop{
			present (automatic){
				present (request){
					
					abort (armAtDest) {
						while (true) {
		                    emit armDest;
		                    pause;
		
		                }
					}
					
					pause;
					
					
					abort (pusherExtended) {
						while (true) {
		                    emit pusherExtend;
		                    pause;
		
		                }
					}
					
					pause;
				
					
					abort (pusherRetracted){
						while (true) {
		                    pause;
		
		                }
					}
					
					System.out.println("retracted");
					
					
					pause;
					
					abort (armAtSource) {
						while (true) {
		                    emit armSource;
		                    pause;
		
		                }
					}
					
					pause;
					
					abort (WPgripped) {
						while (true) {
		                    emit vacOn;
		                    pause;
		                }
					}
					
					abort (armAtDest) {
						while (true) {
		                    {emit vacOn;} || {emit armDest;}
		                    pause;
		                }
					}
					
					pause;
					
					abort (!WPgripped){
						while (true) {
							pause;
						}
					}
					
					pause;
					
					abort (armAtSource) {
						while (true) {
		                    emit armSource;
		                    pause;
		                }
					}
					
				}
				
				
				
			}
			pause;
		}
	}
	||
	{
		loop{
			present (manual){
				present (pusherExtendM){
					emit pusherExtend;
					System.out.println("pusherExtendM");
				}
				
				present (vacOnM){
					emit vacOn;
					System.out.println("vacOn");
				}
				present (armSourceM){
					emit armSource;
					System.out.println("armSourceM");
					
				}
				present (armDestM){
					System.out.println("armDest");
					emit armDest;
					
				}
			}
			pause;
		}
	}
	||
	{
		Integer var_mode;
		loop{
			present (mode){
				var_mode = #mode;
				System.out.println("varMode"+ var_mode);
				
				if (var_mode == 0) {
					emit automatic;
				} else if(var_mode == 1) {
					emit manual;
				}
			}
			pause;
		}
		
	}
}

